Java: Dominando as Collections
-------------------------------------------------------------
7 - Equal e Hashcode:
-O que aprendemos neste capítulo:
-> Implementação das nossas próprias regras de comparação entre objetos de uma mesma classe.
-> Sobrescrita do método equals.
-> A necessidade de sobrescrever o método hashCode quando o equals for sobrescrito.
- Verificandose está matriculado
-> Adicionado o sobrescrita do metodo hashCode, e o equals.
- Programando defensivamente
-------------------------------------------------------------
6 - Aplicando o Set no modelo:
- Criação da classe aluno
- Encapsulando o set;
-> adição do método que adiciona o aluno;
-> adição do método que devolve o set de maneira não modificavel; 
-------------------------------------------------------------
4 - Mais práticas com relacionamentos:
> O que aprendemos neste capitulo:
--> Uma solução para o unmodifiable list.
--> Stream do Java 8.
-------------------------------------------------------------
3 - Relacionamentos com coleções
> O que aprendemos neste capítulo:
-> A implementação LinkedList.
->Encapsulamento e princípios de Orientação a Objeto.
->Programação defensiva.

- Criando relacionamentos com coleções.
— Adicionando novas aulas em um Curso.
- Encapsulando o acesso às aulas.
—> Collections.unmodifiableList(), para que não seja mais possível alterar o valor  dessa lista por fora da própria classe.
->criar um método adiciona que permite adicionar novas aulas na lista.
- Diferença entre ArrayList e LinkedList:
-> ArrayList: é um vetor o próprio array:
-> LinkedList: é uma lista:
-------------------------------------------------------------
2 - Listas de objetos
- Criando listas a partir de objetos próprios
- Reescrevendo o toString da classe Aula
- Definindo um critério de comparação na classe Aula
- Ordenando com Java 8
-------------------------------------------------------------
1 - Trabalhando com ArrayList
- Adicionando elementos em um ArrayList
- Removendo elementos de uma lista
- Acessando elementos da lista
- Ordenando uma lista